#Generated by ResourceBundle Editor (http://eclipse-rbe.sourceforge.net)
# Title should not contain period(.)

# AreaProcessFactory
Area.title                     = Calculate Area
Area.description               = Calculates area values for each feature in a polygon features.
Area.inputFeatures.description = Polygon features.
Area.inputFeatures.title       = Polygon Features
Area.result.description        = The area of features.
Area.result.title              = Result Area

# CalculateFieldProcessFactory
CalculateField.title                     = Calculate Field
CalculateField.description               = Calculates the values of a field for a features based on a specified expression.
CalculateField.expression.description    = The simple calculation expression used to create a value that will populate the selected rows. ex) [population] / ([geom_area] / 1000000)
CalculateField.expression.title          = Expression
CalculateField.fieldName.description     = The field that will be updated with the new calculation.
CalculateField.fieldName.title           = Field Name
CalculateField.inputFeatures.description = Input features to be calculated.
CalculateField.inputFeatures.title       = Input Features
CalculateField.result.description        = Result features.
CalculateField.result.title              = Result Features

# CollectEventsProcessFactory
CollectEvents.title                     = Collect Events
CollectEvents.countField.description    = The field to be calculated coincident points count. icount(Default).
CollectEvents.countField.title          = Count Field
CollectEvents.description               = Collect Event combines coincident points. It converts event data, such as crime or disease incidents, to weighted point data
CollectEvents.inputFeatures.description = The features representing event or incident data.
CollectEvents.inputFeatures.title       = Input Features
CollectEvents.result.description        = Result coincident features.
CollectEvents.result.title              = Result Features

# CountFeaturesProcessFactory
CountFeatures.title                     = Count Features
CountFeatures.description               = Computes the number of features in a features.
CountFeatures.inputFeatures.description = Input features to be calculated.
CountFeatures.inputFeatures.title       = Input Features
CountFeatures.result.description        = The number of features.
CountFeatures.result.title              = Number of features

# RandomPointsProcessFactory
RandomPoints.title                       = Create random points
RandomPoints.description                 = Create random points from extent or polygon boundary
RandomPoints.extent.description          = Random points will be generated inside the extent.
RandomPoints.extent.title                = Random points will be generated inside the extent
RandomPoints.pointCount.description      = The number of points to be randomly generated.
RandomPoints.pointCount.title            = Number of Points
RandomPoints.polygonFeatures.description = The feature class which contains the features into which the random points will be placed.
RandomPoints.polygonFeatures.title       = The feature class which contains the features into which the random points will be placed
RandomPoints.result.description          = Generated random point features.
RandomPoints.result.title                = Result Point Features

# UnionPolygonProcessFactory
UnionPolygon.title                       = Create Union polygon features from polygon features
UnionPolygon.description                 = Create Union polygon features from polygon features.
UnionPolygon.polygonFeatures.description = The polygon features to be processed.
UnionPolygon.polygonFeatures.title       = Polygon Features
UnionPolygon.preserveHole.description    = Preserve or remove hole(interior ring).
UnionPolygon.preserveHole.title          = Preserve Polygon Hole
UnionPolygon.result.description          = Result polygon features.
UnionPolygon.result.title                = Result Polygon Features

# NearestNeighborProcessFactory
NearestNeighbor.title                     = Nearest Neighbor Index
NearestNeighbor.description               = Calculates a nearest neighbor index based on the average distance from each feature to its nearest neighboring feature.
NearestNeighbor.inputFeatures.title       = Input Features
NearestNeighbor.inputFeatures.description = Input features.
NearestNeighbor.distanceMethod.title       = Distance Method
NearestNeighbor.distanceMethod.description = Specifies how distances are calculated from each feature to neighboring features: Euclidean(default) or Manhattan.
NearestNeighbor.area.title                = Area
NearestNeighbor.area.description          = A numeric value representing the study area.
NearestNeighbor.result.title              = Result Nearest Neighbor Index
NearestNeighbor.result.description        = Result Nearest Neighbor Index

# PointStatisticsProcessFactory
PointStatistics.title                     = Point in Polygon Statistics
PointStatistics.description               = Calculates count or statistics for the points inside each polygon features.
PointStatistics.polygonFeatures.title       = Polygon Features
PointStatistics.polygonFeatures.description = Polygon features.
PointStatistics.pointFeatures.title       = Point Features
PointStatistics.pointFeatures.description = Point features.
PointStatistics.countField.title          = Count Field
PointStatistics.countField.description     = Count field.
PointStatistics.statisticsFields.title        = Statistics Fields: Function.PropertyName(First, Last, Sum, Mean, Min, Max, Std, Count)
PointStatistics.statisticsFields.description  = Statistics Fields: Function.PropertyName(First, Last, Sum, Mean, Min, Max, Std, Count). Count(Default)
PointStatistics.result.title              = Result Features
PointStatistics.result.description        = Result Features.

# SpatialJoinProcessFactory
SpatialJoin.title                     = Spatial Join
SpatialJoin.description               = Joins attributes from one feature to another based on the spatial relationship.
SpatialJoin.inputFeatures.title       = Target Features
SpatialJoin.inputFeatures.description = Target features.
SpatialJoin.joinFeatures.title       = Join Features
SpatialJoin.joinFeatures.description = Join features.
SpatialJoin.joinType.title       = Join Type
SpatialJoin.joinType.description = Join Type.
SpatialJoin.searchRadius.title       = Search Radius
SpatialJoin.searchRadius.description = Search Radius.
SpatialJoin.result.title              = Result Features
SpatialJoin.result.description        = Result Features.

# BufferStatisticsProcessFactory
BufferPointStatistics.title                     = Point Statistics using Buffer
BufferPointStatistics.description               = Calculates count or statistics for the points inside each feature's buffer zone.
BufferPointStatistics.inputFeatures.title       = Input Features
BufferPointStatistics.inputFeatures.description = Input features.
BufferPointStatistics.distance.title       = Search Distance
BufferPointStatistics.distance.description = Search distance.
BufferPointStatistics.pointFeatures.title       = Point Features
BufferPointStatistics.pointFeatures.description = Point features.
BufferPointStatistics.countField.title          = Count Field
BufferPointStatistics.countField.description     = Count field.
BufferPointStatistics.statisticsFields.title         = Statistics Fields: Function.PropertyName(First, Last, Sum, Mean, Min, Max, Std, Count)
BufferPointStatistics.statisticsFields.description   = Statistics Fields: Function.PropertyName(First, Last, Sum, Mean, Min, Max, Std, Count). Count(Default)
BufferPointStatistics.result.title              = Result Features
BufferPointStatistics.result.description        = Result Features.

# GlobalMoransIProcessFactory
GlobalMoransI.title                     = Global Moran's I
GlobalMoransI.description               = Measures spatial autocorrelation based on feature locations and attribute values using the Global Moran's I statistic.
GlobalMoransI.inputFeatures.title       = Input Features
GlobalMoransI.inputFeatures.description = The feature class for which spatial autocorrelation will be calculated.
GlobalMoransI.inputField.title       = Input Field
GlobalMoransI.inputField.description = The numeric field used in assessing spatial autocorrelation.
GlobalMoransI.spatialConcept.title       = Conceptualization of Spatial Relationships
GlobalMoransI.spatialConcept.description = Specifies how spatial relationships among features are conceptualized.
GlobalMoransI.distanceMethod.title       = Distance Method
GlobalMoransI.distanceMethod.description = Specifies how distances are calculated from each feature to neighboring features.
GlobalMoransI.standardization.title       = Row standardization
GlobalMoransI.standardization.description = Row standardization.
GlobalMoransI.searchDistance.title       = Distance Band or Threshold Distance
GlobalMoransI.searchDistance.description = Specifies a cutoff distance for Inverse Distance and Fixed Distance options. 
GlobalMoransI.result.title              = Result
GlobalMoransI.result.description        = Result Document.

# GlobalGStatisticsProcessFactory
GlobalGStatistics.title                     = Getis-Ord General G
GlobalGStatistics.description               = Measures the degree of clustering for either high values or low values using the Getis-Ord General G statistic. 
GlobalGStatistics.inputFeatures.title       = Input Features
GlobalGStatistics.inputFeatures.description = The feature class for which the General G statistic will be calculated.
GlobalGStatistics.inputField.title       = Input Field
GlobalGStatistics.inputField.description = The numeric field to be evaluated.
GlobalGStatistics.spatialConcept.title       = Conceptualization of Spatial Relationships
GlobalGStatistics.spatialConcept.description = Specifies how spatial relationships among features are conceptualized.
GlobalGStatistics.distanceMethod.title       = Distance Method
GlobalGStatistics.distanceMethod.description = Specifies how distances are calculated from each feature to neighboring features.
GlobalGStatistics.standardization.title       = Row standardization
GlobalGStatistics.standardization.description = Row standardization.
GlobalGStatistics.searchDistance.title       = Distance Band or Threshold Distance
GlobalGStatistics.searchDistance.description = Specifies a cutoff distance for Inverse Distance and Fixed Distance options. 
GlobalGStatistics.result.title              = Result
GlobalGStatistics.result.description        = Result Document.

# LocalMoransIProcessFactory
LocalMoransI.title                     = Local Moran's I
LocalMoransI.description               = Given a set of weighted features, identifies statistically significant hot spots, cold spots, and spatial outliers using the Anselin Local Moran's I statistic.
LocalMoransI.inputFeatures.title       = Input Features
LocalMoransI.inputFeatures.description = The feature class for which cluster/outlier analysis will be performed.
LocalMoransI.inputField.title       = Input Field
LocalMoransI.inputField.description = The numeric field to be evaluated.
LocalMoransI.spatialConcept.title       = Conceptualization of Spatial Relationships
LocalMoransI.spatialConcept.description = Specifies how spatial relationships among features are conceptualized.
LocalMoransI.distanceMethod.title       = Distance Method
LocalMoransI.distanceMethod.description = Specifies how distances are calculated from each feature to neighboring features.
LocalMoransI.standardization.title       = Row standardization
LocalMoransI.standardization.description = Row standardization.
LocalMoransI.searchDistance.title       = Distance Band or Threshold Distance
LocalMoransI.searchDistance.description = Specifies a cutoff distance for Inverse Distance and Fixed Distance options. 
LocalMoransI.result.title              = Result Features
LocalMoransI.result.description        = The output feature class to receive the results fields.

# LocalGStatisticsProcessFactory
LocalGStatistics.title                     = Getis-Ord Gi*
LocalGStatistics.description               = Given a set of weighted features, identifies statistically significant hot spots and cold spots using the Getis-Ord Gi* statistic.
LocalGStatistics.inputFeatures.title       = Input Features
LocalGStatistics.inputFeatures.description = The feature class for which hot spot analysis will be performed.
LocalGStatistics.inputField.title       = Input Field
LocalGStatistics.inputField.description = The numeric count field (number of victims, crimes, jobs, and so on) to be evaluated.
LocalGStatistics.spatialConcept.title       = Conceptualization of Spatial Relationships
LocalGStatistics.spatialConcept.description = Specifies how spatial relationships among features are conceptualized.
LocalGStatistics.distanceMethod.title       = Distance Method
LocalGStatistics.distanceMethod.description = Specifies how distances are calculated from each feature to neighboring features.
LocalGStatistics.standardization.title       = Row standardization
LocalGStatistics.standardization.description = Row standardization.
LocalGStatistics.searchDistance.title       = Distance Band or Threshold Distance
LocalGStatistics.searchDistance.description = Specifies a cutoff distance for Inverse Distance and Fixed Distance options. 
LocalGStatistics.result.title              = Result Features
LocalGStatistics.result.description        = The output feature class to receive the results fields.

# MeanCenterProcessFactory
MeanCenter.title                     = Mean Center
MeanCenter.description               = Identifies the geographic center (or the center of concentration) for a set of features.
MeanCenter.inputFeatures.title       = Input Features
MeanCenter.inputFeatures.description = A feature class for which the mean center will be calculated.
MeanCenter.weightField.title       = Weight Field
MeanCenter.weightField.description = The numeric field used to create a weighted mean center.
MeanCenter.caseField.title       = Case Field
MeanCenter.caseField.description = Field used to group features for separate mean center calculations.
MeanCenter.dimensionField.title       = Dimension Field
MeanCenter.dimensionField.description = A numeric field containing attribute values from which an average value will be calculated.
MeanCenter.result.title              = Point Features
MeanCenter.result.description        = A point feature class that will contain the features representing the mean centers of the input feature class.

# PearsonProcessFactory
Pearson.title                     = Pearson Correlation Coefficient
Pearson.description               = Pearsons correlation coefficient is obtained by dividing the covariance of the two variables by the product of their standard deviations.
Pearson.inputFeatures.title       = Input Features
Pearson.inputFeatures.description = Input features to be calculated.
Pearson.inputFields.title       = Comma seperated numeric field(s)
Pearson.inputFields.description = The comma seperated numeric field(s) containing attribute values used to calculate the specified statistic.
Pearson.result.title              = Result Pearson Correlation Coefficient
Pearson.result.description        = Result Pearson Correlation Coefficient.

# StatisticsFeaturesProcessFactory
StatisticsFeatures.title                     = Summary Statistics for Features
StatisticsFeatures.description               = Calculates summary statistics(Sum, Minimum, Maximum, Mean, Standard Deviation etc.) for field(s) in a featurecollection.
StatisticsFeatures.inputFeatures.title       = Input Features
StatisticsFeatures.inputFeatures.description = The input features containing the field(s) that will be used to calculate statistics.
StatisticsFeatures.inputFields.title       = Single Field or Comma(,) seperated numeric field(s)
StatisticsFeatures.inputFields.description = Single field or comma(,) seperated numeric field(s) containing attribute values used to calculate the specified statistic.
StatisticsFeatures.result.title              = Result Statistics
StatisticsFeatures.result.description        = Result Statistics.

# HexagonProcessFactory
Hexagon.title                     = Create Hexagonal Grids
Hexagon.description               = Creates hexagonal grids from extent and bounds source
Hexagon.extent.title       = Extent of the grids
Hexagon.extent.description = The extent of the grids.
Hexagon.boundsSource.title       = Polygon Features
Hexagon.boundsSource.description = Polygon Features.
Hexagon.sideLen.title       = Side Length(Radius)
Hexagon.sideLen.description = Side length, radius.
Hexagon.orientation.title       = Hexagon Orientation
Hexagon.orientation.description = Hexagon Orientation: FLAT(default), ANGLED.
Hexagon.result.title              = Result Hexagon
Hexagon.result.description        = Result Hexagon grids.

# FishnetProcessFactory
Fishnet.title                     = Create Fishnet Grids
Fishnet.description               = Creates a fishnet of rectangular cells.
Fishnet.extent.title       = Extent of the grids
Fishnet.extent.description = The extent of the grids.
Fishnet.boundsSource.title       = Polygon Features
Fishnet.boundsSource.description = Polygon Features.
Fishnet.boundaryInside.title       = Bounds Inside
Fishnet.boundaryInside.description = Bounds Inside.
Fishnet.columns.title       = Number of Columns
Fishnet.columns.description = Number of columns.
Fishnet.rows.title       = Number of Rows
Fishnet.rows.description = Number of rows.
Fishnet.width.title       = Width of Each Cell
Fishnet.width.description = Width of Each Cell.
Fishnet.height.title       = Height of Each Cell
Fishnet.height.description = Height of Each Cell.
Fishnet.result.title              = Result Fishnet
Fishnet.result.description        = Result Fishnet grids.
